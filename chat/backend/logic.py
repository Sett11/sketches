import hashlib
import os
from pypdf import PdfReader
import requests
import logging

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
import sys
from datetime import datetime

# –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è –ª–æ–≥–æ–≤ –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
os.makedirs("logs", exist_ok=True)

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ —Ñ–∞–π–ª –∏ –∫–æ–Ω—Å–æ–ª—å
log_level = os.getenv("LOG_LEVEL", "INFO").upper()
logging.basicConfig(
    level=getattr(logging, log_level),
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    handlers=[
        logging.FileHandler(f'logs/logic_{datetime.now().strftime("%Y%m%d")}.log'),
        logging.StreamHandler(sys.stdout)
    ]
)
logger = logging.getLogger(__name__)

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è OpenRouter
OPENROUTER_API_KEY = os.getenv("OPENROUTER_API_KEY")
OPENROUTER_API_URL = "https://openrouter.ai/api/v1/chat/completions"

# –°–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º—Ç –¥–ª—è –º–æ–¥–µ–ª–∏ (—Ñ–∏–ª–æ—Å–æ—Ñ-–∞–Ω–∞–ª–∏—Ç–∏–∫)
SYSTEM_PROMPT = (
    "–†–æ–ª—å –∏ —Ü–µ–ª—å:\n"
    "–¢—ã ‚Äî –æ–ø—ã—Ç–Ω—ã–π —Ñ–∏–ª–æ—Å–æ—Ñ-–∞–Ω–∞–ª–∏—Ç–∏–∫, —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä—É—é—â–∏–π—Å—è –Ω–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–º –∞–Ω–∞–ª–∏–∑–µ —Ç–µ–∫—Å—Ç–æ–≤. "
    "–¢–≤–æ—è –∑–∞–¥–∞—á–∞ ‚Äî –ø—Ä–æ–≤–µ—Å—Ç–∏ –¥–≤—É—Ö—É—Ä–æ–≤–Ω–µ–≤—É—é –ø—Ä–æ–≤–µ—Ä–∫—É –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤: 1) –í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è (—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–π –ª–æ–≥–∏—á–µ—Å–∫–æ–π –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏, –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è –±–∞–∑–æ–≤—ã–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∞–º –∞—Ä–≥—É–º–µ–Ω—Ç–∞—Ü–∏–∏); 2) –í–∞–ª–∏–¥–∞—Ü–∏—è (–æ—Ü–µ–Ω–∫–∞ –∑–Ω–∞—á–∏–º–æ—Å—Ç–∏, –Ω–æ–≤–∏–∑–Ω–∞ –∏ –ø—Ä–∏–º–µ–Ω–∏–º–æ—Å—Ç–∏ –∏–¥–µ–π –≤ –±–æ–ª–µ–µ —à–∏—Ä–æ–∫–æ–º —Ñ–∏–ª–æ—Å–æ—Ñ—Å–∫–æ–º –∏ –∫—É–ª—å—Ç—É—Ä–Ω–æ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ).\n\n"
    "–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –∞–Ω–∞–ª–∏–∑—É:\n\n"
    "–ü—Ä–æ–≤–µ–¥–∏ –≤—Å–µ—Å—Ç–æ—Ä–æ–Ω–Ω–∏–π –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑\n\n"
    "–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –∫—Ä–∏—Ç–∏–∫–∞: –ü—Ä–æ–≤–µ—Ä—å —Ç–µ–∫—Å—Ç –Ω–∞ –ª–æ–≥–∏—á–µ—Å–∫—É—é —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç—å, –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∏–∑–ª–æ–∂–µ–Ω–∏—è, –Ω–µ–ø—Ä–æ—Ç–∏–≤–æ—Ä–µ—á–∏–≤–æ—Å—Ç—å –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã—Ö —Ç–µ—Ä–º–∏–Ω–æ–≤ –∏ —è—Å–Ω–æ—Å—Ç—å —Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–æ–∫. –í—ã—è–≤–∏ —Å–∫—Ä—ã—Ç—ã–µ –ø—Ä–µ–¥–ø–æ—Å—ã–ª–∫–∏ –∏ –Ω–µ—è–≤–Ω—ã–µ –¥–æ–ø—É—â–µ–Ω–∏—è.\n\n"
    "–í–Ω–µ—à–Ω—è—è –∫—Ä–∏—Ç–∏–∫–∞: –°—Ä–∞–≤–Ω–∏ –æ—Å–Ω–æ–≤–Ω—ã–µ —Ç–µ–∑–∏—Å—ã –∏ –∫–æ–Ω—Ü–µ–ø—Ü–∏–∏ —Å –∏–∑–≤–µ—Å—Ç–Ω—ã–º–∏ —Ñ–∏–ª–æ—Å–æ—Ñ—Å–∫–∏–º–∏ —É—á–µ–Ω–∏—è–º–∏, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–¥–Ω–∏–º–∞—é—Ç —Å—Ö–æ–∂–∏–µ –≤–æ–ø—Ä–æ—Å—ã (–Ω–∞–ø—Ä–∏–º–µ—Ä, –∫–æ–Ω—Ü–µ–ø—Ü–∏—è —Ä–∞–∑–ª–∏—á–∏—è —É –î–µ–ª—ë–∑–∞, —Ç–µ–æ—Ä–∏—è –ø–æ–∑–Ω–∞–Ω–∏—è –ö–∞–Ω—Ç–∞ –∏ —Ç.–¥.). –û–ø—Ä–µ–¥–µ–ª–∏, –≤ —á–µ–º –∑–∞–∫–ª—é—á–∞–µ—Ç—Å—è –ø—Ä–µ–µ–º—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å, –∞ –≤ —á–µ–º ‚Äî —Ä–∞–¥–∏–∫–∞–ª—å–Ω–æ–µ –æ—Ç–ª–∏—á–∏–µ.\n\n"
    "–°—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä—É–π –≤—ã–≤–æ–¥—ã –ø–æ –ø—É–Ω–∫—Ç–∞–º\n\n"
    "–°–∏–ª—å–Ω—ã–µ —Å—Ç–æ—Ä–æ–Ω—ã: –£–∫–∞–∂–∏, –≤ —á–µ–º –∑–∞–∫–ª—é—á–∞–µ—Ç—Å—è –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ—Å—Ç—å –∏–¥–µ–∏, –≥–ª—É–±–∏–Ω–∞ –ø—Ä–æ—Ä–∞–±–æ—Ç–∫–∏, —Ä–∏—Ç–æ—Ä–∏—á–µ—Å–∫–∞—è –º–æ—â—å –∏–ª–∏ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–∞—è —ç–≤—Ä–∏—Å—Ç–∏—á–µ—Å–∫–∞—è —Ü–µ–Ω–Ω–æ—Å—Ç—å.\n\n"
    "–°–ª–∞–±—ã–µ —Å—Ç–æ—Ä–æ–Ω—ã/–†–∏—Å–∫–∏: –û—Ç–º–µ—Ç—å –ª–æ–≥–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–≤–∞–ª—ã, —Ç–µ—Ä–º–∏–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫—É—é –Ω–µ—á–µ—Ç–∫–æ—Å—Ç—å, –Ω–µ–ø—Ä–∞–≤–æ–º–µ—Ä–Ω—ã–µ –æ–±–æ–±—â–µ–Ω–∏—è, –∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–æ–∑–º–æ–∂–Ω—ã—Ö –∫–æ–Ω—Ç—Ä–∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∏–ª–∏ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã—Ö —Ñ–∏–ª–æ—Å–æ—Ñ—Å–∫–∏—Ö –∫–æ–Ω—Ü–µ–ø—Ü–∏–π.\n\n"
    "–ö–æ–Ω—Ç–µ–∫—Å—Ç—É–∞–ª–∏–∑–∞—Ü–∏—è –∏ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ: –ü–æ–∫–∞–∂–∏ –º–µ—Å—Ç–æ –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º–æ–π –∏–¥–µ–∏ –≤ \"–ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ —Ñ–∏–ª–æ—Å–æ—Ñ—Å–∫–∏—Ö —Å–º—ã—Å–ª–æ–≤\". "
    "–°—Ä–∞–≤–Ω–∏ –µ–µ —Å –∏–∑–≤–µ—Å—Ç–Ω—ã–º–∏ –∫–æ–Ω—Ü–µ–ø—Ü–∏—è–º–∏, –∏—Å–ø–æ–ª—å–∑—É—è —Ç–∞–±–ª–∏—Ü—É –¥–ª—è –Ω–∞–≥–ª—è–¥–Ω–æ—Å—Ç–∏. –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n"
    "–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º–∞—è –∫–æ–Ω—Ü–µ–ø—Ü–∏—è\t–ë–ª–∏–∑–∫–∞—è –∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–Ω—Ü–µ–ø—Ü–∏—è\t–û–±—â–∏–µ —á–µ—Ä—Ç—ã\t–ö–ª—é—á–µ–≤—ã–µ —Ä–∞–∑–ª–∏—á–∏—è\n"
    "(–ü—Ä–∏–º–µ—Ä: –¢–µ–∫—Å—Ç –æ \"–Ω–µ–≤—ã—Ä–∞–∑–∏–º–æ–º\")\t\"–ù–µ–≥–∞—Ç–∏–≤–Ω–∞—è —Ç–µ–æ–ª–æ–≥–∏—è\" (–ü—Å–µ–≤–¥–æ-–î–∏–æ–Ω–∏—Å–∏–π)\t–ö—Ä–∏—Ç–∏–∫–∞ —è–∑—ã–∫–æ–≤—ã—Ö —Å—Ä–µ–¥—Å—Ç–≤\t–†–∞–∑–Ω—ã–µ –æ–Ω—Ç–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ –æ—Å–Ω–æ–≤–∞–Ω–∏—è\n"
    "(–ö–æ–Ω—Ü–µ–ø—Ü–∏—è –∏–∑ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ —Ç–µ–∫—Å—Ç–∞)\t(–ù–∞–ø—Ä–∏–º–µ—Ä, \"–†–∞–∑–ª–∏—á–∏–µ –∏ –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–µ\" –î–µ–ª—ë–∑–∞)\t(–ù–∞–ø—Ä–∏–º–µ—Ä, –∫—Ä–∏—Ç–∏–∫–∞ —Ç–æ–∂–¥–µ—Å—Ç–≤–∞)\t(–ù–∞–ø—Ä–∏–º–µ—Ä, –∏–Ω–æ–π –ø–æ–¥—Ö–æ–¥ –∫ –ø—Ä–æ–±–ª–µ–º–µ)\n\n"
    "–ü—Ä–µ–¥–ª–æ–∂–∏ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–∏–≤–Ω—ã–µ —Å–æ–≤–µ—Ç—ã –ø–æ —É–ª—É—á—à–µ–Ω–∏—é\n\n"
    "–ü–æ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏—é: –ü–æ—Å–æ–≤–µ—Ç—É–π, –∫–∞–∫–∏–µ –∞—Ä–≥—É–º–µ–Ω—Ç—ã –º–æ–∂–Ω–æ —É—Å–∏–ª–∏—Ç—å, –∫–∞–∫–∏–µ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ —Ç–æ—á–∫–∏ –∑—Ä–µ–Ω–∏—è —Å—Ç–æ–∏—Ç —Ä–∞—Å—Å–º–æ—Ç—Ä–µ—Ç—å –∏ –≤–∫–ª—é—á–∏—Ç—å –≤ —Ç–µ–∫—Å—Ç –¥–ª—è –≥–ª—É–±–∏–Ω—ã, –∫–∞–∫–∏—Ö —Ñ–∏–ª–æ—Å–æ—Ñ–æ–≤ –∏–ª–∏ —à–∫–æ–ª—ã –±—ã–ª–æ –±—ã –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ –ø—Ä–∏–≤–ª–µ—á—å –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –∏–¥–µ–∏.\n\n"
    "–ü–æ —Ñ–æ—Ä–º–µ: –†–µ–∫–æ–º–µ–Ω–¥—É–π —Å–ø–æ—Å–æ–±—ã —É–ª—É—á—à–µ–Ω–∏—è —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ç–µ–∫—Å—Ç–∞, –ø—Ä–æ—è—Å–Ω–µ–Ω–∏—è —Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–æ–∫, –≤–≤–µ–¥–µ–Ω–∏—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–π –¥–ª—è –∫–ª—é—á–µ–≤—ã—Ö —Ç–µ—Ä–º–∏–Ω–æ–≤ –∏ —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏—è –¥–≤—É—Å–º—ã—Å–ª–µ–Ω–Ω–æ—Å—Ç–µ–π. "
    "–£—á–∏—Ç—ã–≤–∞–π, —á—Ç–æ —Ç–µ–∫—Å—Ç ‚Äî —ç—Ç–æ –Ω–µ –ø—Ä–æ—Å—Ç–æ –Ω–æ—Å–∏—Ç–µ–ª—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏, –∞ —Å–ª–æ–∂–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞, –∂–∏–≤—É—â–∞—è –≤ –∫—É–ª—å—Ç—É—Ä–Ω–æ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ.\n\n"
    "–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ —Ñ–æ—Ä–º–∞—Ç—É –æ—Ç–≤–µ—Ç–∞:\n"
    "–û—Ç–≤–µ—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–º, —è—Å–Ω—ã–º –∏ –¥–∏–¥–∞–∫—Ç–∏—á–µ—Å–∫–∏–º. –ò—Å–ø–æ–ª—å–∑—É–π –ø–æ–¥–∑–∞–≥–æ–ª–æ–≤–∫–∏, —Å–ø–∏—Å–∫–∏ –∏ —Ç–∞–±–ª–∏—Ü—ã (–∫–∞–∫ –≤—ã—à–µ) –¥–ª—è –ª—É—á—à–µ–π –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏. "
    "–ò–∑–±–µ–≥–∞–π –∏–∑–ª–∏—à–Ω–µ —Ä–µ–∑–∫–∏—Ö –∏–ª–∏ —Å—É–±—ä–µ–∫—Ç–∏–≤–Ω—ã—Ö –æ—Ü–µ–Ω–æ–∫; —Ç–≤–æ—è —Ü–µ–ª—å ‚Äî –Ω–µ –æ—Å—É–∂–¥–µ–Ω–∏–µ, –∞ –æ–±—ä–µ–∫—Ç–∏–≤–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –∏ –ø–æ–º–æ—â—å –≤ —Ä–∞–∑–≤–∏—Ç–∏–∏ –∏–¥–µ–∏. "
    "–Ø–∑—ã–∫ –∞–Ω–∞–ª–∏–∑–∞ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ç–æ—á–Ω—ã–º –∏ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–º.\n\n"
    "–ü—Ä–∞–≤–∏–ª–∞ –≤—ã–≤–æ–¥–∞:\n"
    "- –ù–µ —Ü–∏—Ç–∏—Ä—É–π –¥–ª–∏–Ω–Ω—ã–µ —Ñ—Ä–∞–≥–º–µ–Ω—Ç—ã –∏—Å—Ö–æ–¥–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞ (–º–∞–∫—Å–∏–º—É–º 200 —Å–∏–º–≤–æ–ª–æ–≤ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏).\n"
    "- –ù–µ –≤–∫–ª—é—á–∞–π —Å—ã—Ä–æ–π –∫–æ–Ω—Ç–µ–∫—Å—Ç –≤ –æ—Ç–≤–µ—Ç, –¥–µ–ª–∞–π —Å–∏–Ω—Ç–µ–∑ –∏ –≤—ã–∂–∏–º–∫—É.\n"
    "- –ò—Å–ø–æ–ª—å–∑—É–π —á–∏—Å—Ç—ã–π Markdown, –≤–∫–ª—é—á–∞—è —Ç–∞–±–ª–∏—Ü—ã.\n"
    "- –í—Å–µ–≥–¥–∞ –≤–æ–∑–≤—Ä–∞—â–∞–π —Ä–∞–∑–¥–µ–ª—ã: '–°–∏–ª—å–Ω—ã–µ —Å—Ç–æ—Ä–æ–Ω—ã', '–°–ª–∞–±—ã–µ —Å—Ç–æ—Ä–æ–Ω—ã/–†–∏—Å–∫–∏', '–ö–æ–Ω—Ç–µ–∫—Å—Ç—É–∞–ª–∏–∑–∞—Ü–∏—è –∏ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ' (—Å —Ç–∞–±–ª–∏—Ü–µ–π), '–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏'."
)

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ API –∫–ª—é—á–∞
if not OPENROUTER_API_KEY:
    logger.warning("OPENROUTER_API_KEY –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å API.")

def extract_text_from_pdf(file_path: str) -> str:
    """–ò–∑–≤–ª–µ–∫–∞–µ—Ç —Ç–µ–∫—Å—Ç –∏–∑ PDF —Ñ–∞–π–ª–∞."""
    try:
        reader = PdfReader(file_path)
        text = ""
        for page in reader.pages:
            text += page.extract_text() + "\n"
        logger.info(f"–ò–∑–≤–ª–µ—á–µ–Ω —Ç–µ–∫—Å—Ç –∏–∑ {file_path}")
        return text
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–≤–ª–µ—á–µ–Ω–∏–∏ —Ç–µ–∫—Å—Ç–∞ –∏–∑ {file_path}: {e}")
        return ""

def get_file_hash(file_path: str) -> str:
    """–í—ã—á–∏—Å–ª—è–µ—Ç SHA256 —Ö—ç—à —Ñ–∞–π–ª–∞."""
    sha256_hash = hashlib.sha256()
    try:
        with open(file_path, "rb") as f:
            for byte_block in iter(lambda: f.read(4096), b""):
                sha256_hash.update(byte_block)
        return sha256_hash.hexdigest()
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã—á–∏—Å–ª–µ–Ω–∏–∏ —Ö—ç—à–∞ –¥–ª—è {file_path}: {e}")
        return ""

def process_files_and_query(prompt: str, file_paths: list[str]):
    """–û—Å–Ω–æ–≤–Ω–∞—è –±–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫–∞: –∏–∑–≤–ª–µ–∫–∞–µ—Ç —Ç–µ–∫—Å—Ç –∏–∑ —Ñ–∞–π–ª–æ–≤, –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –¥—É–±–ª–∏–∫–∞—Ç—ã, –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∑–∞–ø—Ä–æ—Å –∫ –º–æ–¥–µ–ª–∏."""
    logger.info("üéØ –ù–∞—á–∏–Ω–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –∑–∞–ø—Ä–æ—Å–∞")
    logger.info(f"üí¨ –ü—Ä–æ–º—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: '{prompt[:100]}{'...' if len(prompt) > 100 else ''}'")
    logger.info(f"üìÅ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ñ–∞–π–ª–æ–≤: {len(file_paths)}")
    logger.info(f"üìÇ –ü—É—Ç–∏ –∫ —Ñ–∞–π–ª–∞–º: {file_paths}")
    
    combined_text = ""
    processed_hashes = set()

    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ñ–∞–π–ª—ã —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å
    if file_paths:
        logger.info("üìÑ –ù–∞—á–∏–Ω–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É —Ñ–∞–π–ª–æ–≤...")
        for i, file_path in enumerate(file_paths, 1):
            logger.info(f"üìÑ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ñ–∞–π–ª {i}/{len(file_paths)}: {file_path}")
            
            if not os.path.isfile(file_path):
                logger.warning(f"‚ö†Ô∏è –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {file_path}")
                continue

            file_hash = get_file_hash(file_path)
            logger.info(f"üîç –•—ç—à —Ñ–∞–π–ª–∞: {file_hash[:16]}...")
            
            if file_hash in processed_hashes:
                logger.info(f"üîÑ –§–∞–π–ª {file_path} —è–≤–ª—è–µ—Ç—Å—è –¥—É–±–ª–∏–∫–∞—Ç–æ–º, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º.")
                continue

            processed_hashes.add(file_hash)

            # –ü–æ–¥–¥–µ—Ä–∂–∫–∞ —Ç–æ–ª—å–∫–æ PDF –¥–ª—è –ø—Ä–æ—Å—Ç–æ—Ç—ã –ø—Ä–∏–º–µ—Ä–∞
            if file_path.lower().endswith('.pdf'):
                logger.info(f"üìñ –ò–∑–≤–ª–µ–∫–∞–µ–º —Ç–µ–∫—Å—Ç –∏–∑ PDF: {file_path}")
                extracted_text = extract_text_from_pdf(file_path)
                if extracted_text.strip():
                    text_length = len(extracted_text)
                    logger.info(f"‚úÖ –ò–∑–≤–ª–µ—á–µ–Ω–æ {text_length} —Å–∏–º–≤–æ–ª–æ–≤ –∏–∑ {file_path}")
                    combined_text += f"\n--- –°–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞ {file_path} ---\n{extracted_text}\n"
                else:
                    logger.warning(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å —Ç–µ–∫—Å—Ç –∏–∑ {file_path}")
            else:
                logger.warning(f"‚ùå –§–æ—Ä–º–∞—Ç —Ñ–∞–π–ª–∞ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è (–ø–æ–∫–∞ —Ç–æ–ª—å–∫–æ PDF): {file_path}")
        
        logger.info(f"üìä –û–±—â–∏–π —Ä–∞–∑–º–µ—Ä –∏–∑–≤–ª–µ—á–µ–Ω–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞: {len(combined_text)} —Å–∏–º–≤–æ–ª–æ–≤")
    else:
        logger.info("üìÑ –§–∞–π–ª—ã –Ω–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω—ã")

    # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –º–æ–¥–µ–ª–∏
    # –í—Å–µ–≥–¥–∞ –¥–æ–±–∞–≤–ª—è–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º—Ç —Ñ–∏–ª–æ—Å–æ—Ñ–∞-–∞–Ω–∞–ª–∏—Ç–∏–∫–∞
    if combined_text.strip():
        logger.info("üìù –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º –∏–∑ —Ñ–∞–π–ª–æ–≤ + —Å–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º—Ç")
        messages = [
            {"role": "system", "content": SYSTEM_PROMPT},
            {"role": "user", "content": f"–ö–æ–Ω—Ç–µ–∫—Å—Ç:\n{combined_text}\n\n–í–æ–ø—Ä–æ—Å: {prompt}"}
        ]
        logger.info(f"üìä –†–∞–∑–º–µ—Ä —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º: {len(messages[1]['content'])} —Å–∏–º–≤–æ–ª–æ–≤")
    else:
        logger.info("üìù –§–∞–π–ª—ã –Ω–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω—ã ‚Äî –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç–æ–ª—å–∫–æ —Å–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º—Ç –∏ –≤–æ–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
        messages = [
            {"role": "system", "content": SYSTEM_PROMPT},
            {"role": "user", "content": prompt}
        ]
        logger.info(f"üìä –†–∞–∑–º–µ—Ä —Å–æ–æ–±—â–µ–Ω–∏—è –±–µ–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞: {len(messages[1]['content'])} —Å–∏–º–≤–æ–ª–æ–≤")

    headers = {
        "Authorization": f"Bearer {OPENROUTER_API_KEY}",
        "Content-Type": "application/json"
    }

    payload = {
        "model": "google/gemma-3-27b-it:free", # –ü—Ä–∏–º–µ—Ä –º–æ–¥–µ–ª–∏, –º–æ–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å
        "messages": messages,
        "stream": False # –û—Ç–∫–ª—é—á–∞–µ–º —Å—Ç—Ä–∏–º–∏–Ω–≥
    }

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ API –∫–ª—é—á–∞ –ø–µ—Ä–µ–¥ –∑–∞–ø—Ä–æ—Å–æ–º
    if not OPENROUTER_API_KEY:
        return "–û—à–∏–±–∫–∞: API –∫–ª—é—á OpenRouter –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è OPENROUTER_API_KEY."

    try:
        logger.info("üöÄ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –∫ OpenRouter API...")
        logger.info(f"üì° URL: {OPENROUTER_API_URL}")
        logger.info(f"üîë API –∫–ª—é—á: {'*' * 20}{OPENROUTER_API_KEY[-4:] if OPENROUTER_API_KEY else '–ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù'}")
        logger.info(f"üìù –ú–æ–¥–µ–ª—å: {payload.get('model', '–ù–ï –£–ö–ê–ó–ê–ù–ê')}")
        logger.info(f"üí¨ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π: {len(payload.get('messages', []))}")
        logger.info(f"üìä –†–∞–∑–º–µ—Ä payload: {len(str(payload))} —Å–∏–º–≤–æ–ª–æ–≤")
        logger.info(f"üìã Payload: {payload}")
        
        response = requests.post(OPENROUTER_API_URL, headers=headers, json=payload)
        
        logger.info(f"üì® –ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç –æ—Ç API. –°—Ç–∞—Ç—É—Å: {response.status_code}")
        logger.info(f"üìã –ó–∞–≥–æ–ª–æ–≤–∫–∏ –æ—Ç–≤–µ—Ç–∞: {dict(response.headers)}")
        
        response.raise_for_status()
        logger.info("‚úÖ –ó–∞–ø—Ä–æ—Å —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω, –ø–∞—Ä—Å–∏–º –æ—Ç–≤–µ—Ç...")

        # –õ–æ–≥–∏—Ä—É–µ–º —Å—ã—Ä–æ–π –æ—Ç–≤–µ—Ç
        raw_content = response.text
        logger.info(f"üìÑ –°—ã—Ä–æ–π –æ—Ç–≤–µ—Ç –æ—Ç API: {raw_content[:500]}{'...' if len(raw_content) > 500 else ''}")
        logger.info(f"üìä –†–∞–∑–º–µ—Ä —Å—ã—Ä–æ–≥–æ –æ—Ç–≤–µ—Ç–∞: {len(raw_content)} —Å–∏–º–≤–æ–ª–æ–≤")
        
        if not raw_content.strip():
            logger.error("‚ùå –ü—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç –æ—Ç API")
            return "API –≤–µ—Ä–Ω—É–ª –ø—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç."

        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–±—ã—á–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ (–±–µ–∑ —Å—Ç—Ä–∏–º–∏–Ω–≥–∞)
        import json
        try:
            data = response.json()
            logger.info(f"üìÑ –ü–æ–ª—É—á–µ–Ω JSON –æ—Ç–≤–µ—Ç —Ä–∞–∑–º–µ—Ä–æ–º: {len(str(data))} —Å–∏–º–≤–æ–ª–æ–≤")
        except json.JSONDecodeError as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON: {e}")
            logger.error(f"üìÑ –°—ã—Ä–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç: {raw_content}")
            return f"–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ –æ—Ç–≤–µ—Ç–∞ –æ—Ç API: {e}"
        
        # –ò–∑–≤–ª–µ–∫–∞–µ–º –æ—Ç–≤–µ—Ç –∏–∑ JSON
        choices = data.get('choices', [])
        if choices:
            message = choices[0].get('message', {})
            content = message.get('content', '')
            if content:
                logger.info(f"üìù –ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç –¥–ª–∏–Ω–æ–π: {len(content)} —Å–∏–º–≤–æ–ª–æ–≤")
                return content
            else:
                logger.warning("‚ö†Ô∏è –ü—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç –æ—Ç –º–æ–¥–µ–ª–∏")
                return "–ú–æ–¥–µ–ª—å –≤–µ—Ä–Ω—É–ª–∞ –ø—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç."
        else:
            logger.warning("‚ö†Ô∏è –ù–µ—Ç choices –≤ –æ—Ç–≤–µ—Ç–µ")
            return "–ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞ –æ—Ç API."

    except requests.exceptions.RequestException as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –∫ OpenRouter API: {e}")
        logger.error(f"üîç –¢–∏–ø –æ—à–∏–±–∫–∏: {type(e).__name__}")
        logger.error(f"üì° URL –∑–∞–ø—Ä–æ—Å–∞: {OPENROUTER_API_URL}")
        return f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∫ –º–æ–¥–µ–ª–∏: {e}"
    except Exception as e:
        logger.error(f"üí• –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –≤ –±–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫–µ: {e}")
        logger.error(f"üîç –¢–∏–ø –æ—à–∏–±–∫–∏: {type(e).__name__}")
        logger.error(f"üìç –°—Ç–µ–∫ –≤—ã–∑–æ–≤–æ–≤: {str(e)}")
        return f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞: {e}"
