#!/usr/bin/env python3
"""
–ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ª–∏–º–∏—Ç–æ–≤ API (–ë–ï–ó —Å–ø–∏—Å–∞–Ω–∏—è –∑–∞–ø—Ä–æ—Å–æ–≤!)
–¢–æ–ª—å–∫–æ —á–∏—Ç–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É - –Ω–µ –¥–µ–ª–∞–µ—Ç –∑–∞–ø—Ä–æ—Å–æ–≤ –∫ –¥–∞–Ω–Ω—ã–º
"""
import requests
import json
import os
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

API_KEY = os.getenv('API_KEY')
STAT_URL = os.getenv('API_STAT_URL', 'https://service.api-assist.com/stat/')

if not API_KEY:
    print("‚ùå –û—à–∏–±–∫–∞: API_KEY –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ .env —Ñ–∞–π–ª–µ.")
    exit(1)

def check_limits():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–∏–º–∏—Ç–æ–≤ API (–ù–ï —Å–ø–∏—Å—ã–≤–∞–µ—Ç—Å—è!)"""
    try:
        url = f"{STAT_URL}?key={API_KEY}"
        response = requests.get(url, timeout=10)
        response.raise_for_status()
        
        data = response.json()
        
        # API –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫: [{"service": "ras_arbitr", ...}]
        if isinstance(data, list) and len(data) > 0:
            info = data[0]
        else:
            info = data  # –ù–∞ —Å–ª—É—á–∞–π –µ—Å–ª–∏ –≤–µ—Ä–Ω—ë—Ç—Å—è —Å–ª–æ–≤–∞—Ä—å –Ω–∞–ø—Ä—è–º—É—é
        
        print("=" * 60)
        print("üìä –õ–ò–ú–ò–¢–´ API –ö–ê–î–† –ê–†–ë–ò–¢–†")
        print("=" * 60)
        print(f"–î–Ω–µ–≤–Ω–æ–π –ª–∏–º–∏—Ç:      {info.get('day_limit', 'N/A')}")
        print(f"–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ —Å–µ–≥–æ–¥–Ω—è: {info.get('day_request_count', 'N/A')}")
        print(f"–û—Å—Ç–∞–ª–æ—Å—å —Å–µ–≥–æ–¥–Ω—è:   {info.get('day_limit', 0) - info.get('day_request_count', 0)}")
        print()
        print(f"–ú–µ—Å—è—á–Ω—ã–π –ª–∏–º–∏—Ç:     {info.get('month_limit', 'N/A')}")
        print(f"–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ –∑–∞ –º–µ—Å—è—Ü: {info.get('month_request_count', 'N/A')}")
        print(f"–û—Å—Ç–∞–ª–æ—Å—å –∑–∞ –º–µ—Å—è—Ü:  {info.get('month_limit', 0) - info.get('month_request_count', 0)}")
        print()
        print(f"–û–ø–ª–∞—á–µ–Ω–æ –¥–æ:        {info.get('paid_till', 'N/A')}")
        print("=" * 60)
        
        # –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è
        day_remaining = info.get('day_limit', 0) - info.get('day_request_count', 0)
        if day_remaining < 50:
            print("‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –û—Å—Ç–∞–ª–æ—Å—å –º–∞–ª–æ –¥–Ω–µ–≤–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤!")
        elif day_remaining < 100:
            print("‚ö†Ô∏è  –î–Ω–µ–≤–Ω–æ–π –ª–∏–º–∏—Ç –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è")
        else:
            print("‚úÖ –õ–∏–º–∏—Ç–æ–≤ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–ª—è —Ä–∞–±–æ—Ç—ã")
        
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ª–∏–º–∏—Ç–æ–≤: {e}")
        return False

if __name__ == "__main__":
    check_limits()

